package interfaces // import "github.com/theoremus-urban-solutions/netex-validator/interfaces"


TYPES

type DatasetValidator interface {
	Validate(report *types.ValidationReport) error
}
    DatasetValidator represents a validator that operates on entire datasets

type IdExtractor interface {
	// ExtractIds extracts all NetEX IDs from XML content
	ExtractIds(fileName string, content []byte) ([]types.IdVersion, error)

	// ExtractReferences extracts all NetEX ID references from XML content
	ExtractReferences(fileName string, content []byte) ([]types.IdVersion, error)
}
    IdExtractor extracts NetEX IDs and references from XML content

type IdRepository interface {
	// AddId registers a NetEX ID
	AddId(id, version, fileName string) error

	// AddReference registers a reference to a NetEX ID
	AddReference(refId, version, fileName string)

	// ValidateReferences validates all references against registered IDs
	ValidateReferences() []types.ValidationIssue

	// ValidateIdFormat validates NetEX ID format compliance
	ValidateIdFormat() []types.ValidationIssue

	// ValidateVersions validates version information on IDs
	ValidateVersions() []types.ValidationIssue

	// GetDuplicateIds returns IDs that appear in multiple files
	GetDuplicateIds() []types.ValidationIssue

	// GetIdsByFile returns all IDs registered for a specific file
	GetIdsByFile(fileName string) []string

	// GetAllIds returns all registered IDs
	GetAllIds() map[string]types.IdVersion

	// Clear resets the repository
	Clear()
}
    IdRepository manages NetEX ID storage and validation

type IdValidator interface {
	// ValidateIds validates all registered IDs and references
	ValidateIds() ([]types.ValidationIssue, error)

	// ExtractIds extracts IDs from XML content
	ExtractIds(fileName string, content []byte) error

	// ExtractReferences extracts references from XML content
	ExtractReferences(fileName string, content []byte) error

	// GetRepository returns the underlying ID repository
	GetRepository() IdRepository
}
    IdValidator validates NetEX IDs and references

type JAXBValidator interface {
	Validate(context context.JAXBValidationContext) ([]types.ValidationIssue, error)
	GetRules() []types.ValidationRule
}
    JAXBValidator represents an object model validator (similar to JAXB in Java)

type SchemaValidator interface {
	Validate(context context.SchemaValidationContext) ([]types.ValidationIssue, error)
	GetRules() []types.ValidationRule
}
    SchemaValidator represents an XML schema validator

type ValidationReportEntryFactory interface {
	CreateValidationReportEntry(issue types.ValidationIssue) types.ValidationReportEntry
	TemplateValidationReportEntry(rule types.ValidationRule) types.ValidationReportEntry
}
    ValidationReportEntryFactory creates validation report entries from
    validation issues

type Validator interface {
	Validate(context context.ValidationContext) ([]types.ValidationIssue, error)
	GetRules() []types.ValidationRule
}
    Validator represents a generic validator interface

type XPathValidator interface {
	Validate(context context.XPathValidationContext) ([]types.ValidationIssue, error)
	GetRules() []types.ValidationRule
}
    XPathValidator represents an XPath-based validator

